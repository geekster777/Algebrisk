<html window-frame="transparent">
  <head>
    <style>
      html {
        margin: 0;
        padding: 0;
        background: transparent;
        color: rgb(70, 70, 70);
      }
      body {
        max-height: 200dip;
        margin: 4dip;
        overflow: hidden;
        border-radius: 24dip;
        background: rgba(255, 255, 255, 0.9);
        border: 1dip solid rgba(225, 225, 225, 0.7);
        box-shadow: 0 0 8dip -4dip rgba(0, 0, 0, 0.7);
        display: flex;
        flex-direction: column;
        height: auto;
      }
      #query {
        background: transparent;
        font-size: 32pt;
        font-family: Verdana;
        color: rgb(70, 70, 70);
        border: none;
        width: 100%;
        margin: 0;
        flex-shrink: 0;
        padding: 12dip;
      }
      .separator {
        height: 1dip;
        margin: 0 auto;
        width: 100%;
        background: linear-gradient(
          to right,
          transparent 0%,
          rgba(100, 100, 100, 0.5) 10%,
          rgba(100, 100, 100, 0.5) 90%,
          transparent 100%
        );
      }
      #answer-container {
        display: none;
        margin: 0;
      }
      #answer {
        font-size: 32pt;
        margin: 0 auto;
        display: inline-block;
        padding: 12dip;
      }
      #copy {
        float: right;
        margin: 22dip 12dip;
        background: transparent;
        border: none;
        width: 32dip;
        height: 32dip;
        cursor: pointer;
      }
      #copy img {
        width: 32dip;
        height: 32dip;
        fill: rgb(70, 70, 70);
      }
      #copy img:hover {
        fill: rgb(120, 120, 120);
      }
    </style>
  </head>
  <body>
    <div class="container">
      <input id="query" placeholder="Enter a mathmatical expression" />
      <div id="answer-container">
        <div class="separator" />
        <div>
          <span id="answer" />
          <button id="copy" title="Copy answer text">
            <img src="copy.svg" />
          </button>
        </div>
      </div>
    </div>
    <script type="module">
      import * as Storage from "@storage";

      const storage = Storage.open("algebrisk.db");
      if (!storage.root) {
        storage.root = {
          version: 1,
          copyOnEnter: true,
          closeOnEnter: true,
          maxHistory: 50,
          history: [],
        };
      }
      document.on("beforeunload", () => {
        storage.close();
      });

      const queryInput = document.querySelector('#query');
      const answerEl = document.querySelector('#answer');
      const answerContainer = document.querySelector('#answer-container');
      const copyEl = document.querySelector('#copy');
      
      Graphics.Image.load(__DIR__ + "app.png").then((image) => {
        Window.this.trayIcon({
          image,
          text: 'Algebrisk',
        });
      });

      Window.this.on('statechange', () => {
        queryInput.value = '';
        answerEl.innerText = '';
        answerContainer.style.display = 'none';
        Window.this.activate(true);
      });
      
      let currentHistoricalIndex = storage.root.history.length;
      Window.this.on('trayiconclick', (e) => {
        new Window({
          url: __DIR__ + "settings.htm",
          type: Window.FRAME_WINDOW,
          caption: 'Settings',
          parameters: {
            showSearchBar: () => Window.this.state = 1,
            quit: () => {
              Window.this.trayIcon('remove');
              Window.this.xcall('quit')
            },
            getSettings: () => storage,
          }
        });
      });

      document.addEventListener('keydown', async e => {
        if (e.code === 'Escape') {
          closeWindow();
        }
        if (e.code === 'Enter') {
          if (storage.root.copyOnEnter) {
            copyTextToClipboard();
          }
          if (storage.root.closeOnEnter) {
            closeWindow();
          }
        }
        if (e.code === 'ArrowUp') {
          currentHistoricalIndex = Math.max(currentHistoricalIndex - 1, 0);
          queryInput.value = storage.root.history[currentHistoricalIndex];
          calcExpr();
        } else if (e.code === 'ArrowDown') {
          currentHistoricalIndex = Math.min(currentHistoricalIndex + 1, storage.root.history.length);
          queryInput.value = storage.root.history[currentHistoricalIndex];
          calcExpr();
        } else {
          currentHistoricalIndex = storage.root.history.length;
        }
      });

      function calcExpr() {
        const answer = parseCalcExpr(queryInput.value);
        answerEl.innerText = `${answer ?? ''}`;
        answerContainer.style.display = answer == null ? 'none' : 'block';
      }
      queryInput.addEventListener('input', calcExpr);

      function parseCalcExpr(expr) {
        try {
          return Window.this.xcall('eval', expr);
        } catch {
          return null;
        }
      }

      function copyTextToClipboard() {
        if (answerEl.innerText !== '') {
          Clipboard.writeText(answerEl.innerText);
        }
      }

      function closeWindow() {
        if (queryInput.value.length > 0) {
          storage.root.history.push(queryInput.value);
          if (storage.root.history.length > storage.root.maxHistory) {
            storage.root.history.splice(0, storage.root.history.length - storage.root.maxHistory);
          }
          currentHistoricalIndex = storage.root.history.push();
        }

        Window.this.state = 4;
      }
      
      document.on("beforeunload", () => {
        storage.close();
      });
      copyEl.addEventListener('click', copyTextToClipboard);
    </script>
  </body>
</html>